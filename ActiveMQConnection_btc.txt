Compiled from "ActiveMQConnection.java"
public class org.codehaus.activemq.ActiveMQConnection implements javax.jms.Connection,org.codehaus.activemq.message.PacketListener,javax.jms.ExceptionListener,javax.jms.TopicConnection,javax.jms.QueueConnection,org.codehaus.activemq.management.StatsCapable,org.codehaus.activemq.capacity.CapacityMonitorEventListener,org.codehaus.activemq.transport.TransportStatusEventListener {
  public static org.codehaus.activemq.ActiveMQConnection makeConnection() throws javax.jms.JMSException;
    Code:
       0: new           #6                  // class org/codehaus/activemq/ActiveMQConnectionFactory
       3: dup
       4: invokespecial #7                  // Method org/codehaus/activemq/ActiveMQConnectionFactory."<init>":()V
       7: astore_0
       8: aload_0
       9: invokevirtual #8                  // Method org/codehaus/activemq/ActiveMQConnectionFactory.createConnection:()Ljavax/jms/Connection;
      12: checkcast     #9                  // class org/codehaus/activemq/ActiveMQConnection
      15: areturn

  public static org.codehaus.activemq.ActiveMQConnection makeConnection(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: new           #6                  // class org/codehaus/activemq/ActiveMQConnectionFactory
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method org/codehaus/activemq/ActiveMQConnectionFactory."<init>":(Ljava/lang/String;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #8                  // Method org/codehaus/activemq/ActiveMQConnectionFactory.createConnection:()Ljavax/jms/Connection;
      13: checkcast     #9                  // class org/codehaus/activemq/ActiveMQConnection
      16: areturn

  public static org.codehaus.activemq.ActiveMQConnection makeConnection(java.lang.String, java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: new           #6                  // class org/codehaus/activemq/ActiveMQConnectionFactory
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #11                 // Method org/codehaus/activemq/ActiveMQConnectionFactory."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      10: astore_3
      11: aload_3
      12: invokevirtual #8                  // Method org/codehaus/activemq/ActiveMQConnectionFactory.createConnection:()Ljavax/jms/Connection;
      15: checkcast     #9                  // class org/codehaus/activemq/ActiveMQConnection
      18: areturn

  public org.codehaus.activemq.ActiveMQConnection(org.codehaus.activemq.ActiveMQConnectionFactory, java.lang.String, java.lang.String, org.codehaus.activemq.transport.TransportChannel) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #12                 // Method "<init>":(Lorg/codehaus/activemq/ActiveMQConnectionFactory;Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: aload         4
      10: putfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      13: aload_0
      14: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      17: aload_0
      18: invokeinterface #14,  2           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.setPacketListener:(Lorg/codehaus/activemq/message/PacketListener;)V
      23: aload_0
      24: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      27: aload_0
      28: invokeinterface #15,  2           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.setExceptionListener:(Ljavax/jms/ExceptionListener;)V
      33: aload_0
      34: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      37: aload_0
      38: invokeinterface #16,  2           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.addTransportStatusEventListener:(Lorg/codehaus/activemq/transport/TransportStatusEventListener;)V
      43: aload_0
      44: iconst_1
      45: putfield      #17                 // Field isTransportOK:Z
      48: return

  protected org.codehaus.activemq.ActiveMQConnection(org.codehaus.activemq.ActiveMQConnectionFactory, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        2000
       8: putfield      #19                 // Field sendCloseTimeout:I
      11: aload_0
      12: lconst_0
      13: putfield      #20                 // Field flowControlSleepTime:J
      16: aload_0
      17: iconst_1
      18: putfield      #21                 // Field useAsyncSend:Z
      21: aload_0
      22: sipush        30000
      25: putfield      #22                 // Field sendConnectionInfoTimeout:I
      28: aload_0
      29: aload_1
      30: putfield      #23                 // Field factory:Lorg/codehaus/activemq/ActiveMQConnectionFactory;
      33: aload_0
      34: aload_2
      35: putfield      #24                 // Field userName:Ljava/lang/String;
      38: aload_0
      39: aload_3
      40: putfield      #25                 // Field password:Ljava/lang/String;
      43: aload_0
      44: new           #26                 // class org/codehaus/activemq/util/IdGenerator
      47: dup
      48: invokespecial #27                 // Method org/codehaus/activemq/util/IdGenerator."<init>":()V
      51: putfield      #28                 // Field clientIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      54: aload_0
      55: new           #26                 // class org/codehaus/activemq/util/IdGenerator
      58: dup
      59: invokespecial #27                 // Method org/codehaus/activemq/util/IdGenerator."<init>":()V
      62: putfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      65: aload_0
      66: new           #26                 // class org/codehaus/activemq/util/IdGenerator
      69: dup
      70: invokespecial #27                 // Method org/codehaus/activemq/util/IdGenerator."<init>":()V
      73: putfield      #30                 // Field consumerIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      76: aload_0
      77: new           #26                 // class org/codehaus/activemq/util/IdGenerator
      80: dup
      81: invokespecial #27                 // Method org/codehaus/activemq/util/IdGenerator."<init>":()V
      84: putfield      #31                 // Field sessionIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      87: aload_0
      88: new           #32                 // class EDU/oswego/cs/dl/util/concurrent/SynchronizedInt
      91: dup
      92: iconst_0
      93: invokespecial #33                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedInt."<init>":(I)V
      96: putfield      #34                 // Field consumerNumberGenerator:LEDU/oswego/cs/dl/util/concurrent/SynchronizedInt;
      99: aload_0
     100: new           #35                 // class EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList
     103: dup
     104: invokespecial #36                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList."<init>":()V
     107: putfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     110: aload_0
     111: new           #35                 // class EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList
     114: dup
     115: invokespecial #36                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList."<init>":()V
     118: putfield      #38                 // Field messageDispatchers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     121: aload_0
     122: new           #35                 // class EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList
     125: dup
     126: invokespecial #36                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList."<init>":()V
     129: putfield      #39                 // Field connectionConsumers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     132: aload_0
     133: new           #40                 // class org/codehaus/activemq/ActiveMQConnectionMetaData
     136: dup
     137: invokespecial #41                 // Method org/codehaus/activemq/ActiveMQConnectionMetaData."<init>":()V
     140: putfield      #42                 // Field connectionMetaData:Lorg/codehaus/activemq/ActiveMQConnectionMetaData;
     143: aload_0
     144: new           #43                 // class EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean
     147: dup
     148: iconst_0
     149: invokespecial #44                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean."<init>":(Z)V
     152: putfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
     155: aload_0
     156: new           #43                 // class EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean
     159: dup
     160: iconst_0
     161: invokespecial #44                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean."<init>":(Z)V
     164: putfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
     167: aload_0
     168: invokestatic  #47                 // Method java/lang/System.currentTimeMillis:()J
     171: putfield      #48                 // Field startTime:J
     174: aload_0
     175: new           #49                 // class org/codehaus/activemq/ActiveMQPrefetchPolicy
     178: dup
     179: invokespecial #50                 // Method org/codehaus/activemq/ActiveMQPrefetchPolicy."<init>":()V
     182: putfield      #51                 // Field prefetchPolicy:Lorg/codehaus/activemq/ActiveMQPrefetchPolicy;
     185: aload_0
     186: new           #52                 // class org/codehaus/activemq/message/util/MemoryBoundedQueueManager
     189: dup
     190: aload_0
     191: getfield      #53                 // Field clientID:Ljava/lang/String;
     194: ldc2_w        #54                 // long 10485760l
     197: invokespecial #56                 // Method org/codehaus/activemq/message/util/MemoryBoundedQueueManager."<init>":(Ljava/lang/String;J)V
     200: putfield      #57                 // Field boundedQueueManager:Lorg/codehaus/activemq/message/util/MemoryBoundedQueueManager;
     203: aload_0
     204: getfield      #57                 // Field boundedQueueManager:Lorg/codehaus/activemq/message/util/MemoryBoundedQueueManager;
     207: aload_0
     208: invokevirtual #58                 // Method org/codehaus/activemq/message/util/MemoryBoundedQueueManager.addCapacityEventListener:(Lorg/codehaus/activemq/capacity/CapacityMonitorEventListener;)V
     211: aload_0
     212: instanceof    #59                 // class javax/jms/XAConnection
     215: istore        4
     217: aload_0
     218: aload_1
     219: invokevirtual #60                 // Method org/codehaus/activemq/ActiveMQConnectionFactory.getFactoryStats:()Lorg/codehaus/activemq/management/JMSStatsImpl;
     222: putfield      #61                 // Field factoryStats:Lorg/codehaus/activemq/management/JMSStatsImpl;
     225: aload_0
     226: getfield      #61                 // Field factoryStats:Lorg/codehaus/activemq/management/JMSStatsImpl;
     229: aload_0
     230: invokevirtual #62                 // Method org/codehaus/activemq/management/JMSStatsImpl.addConnection:(Lorg/codehaus/activemq/ActiveMQConnection;)V
     233: aload_0
     234: new           #63                 // class org/codehaus/activemq/management/JMSConnectionStatsImpl
     237: dup
     238: aload_0
     239: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     242: iload         4
     244: invokespecial #64                 // Method org/codehaus/activemq/management/JMSConnectionStatsImpl."<init>":(Ljava/util/List;Z)V
     247: putfield      #65                 // Field stats:Lorg/codehaus/activemq/management/JMSConnectionStatsImpl;
     250: aload_1
     251: aload_0
     252: invokevirtual #66                 // Method org/codehaus/activemq/ActiveMQConnectionFactory.onConnectionCreate:(Lorg/codehaus/activemq/ActiveMQConnection;)V
     255: return

  public javax.management.j2ee.statistics.Stats getStats();
    Code:
       0: aload_0
       1: getfield      #65                 // Field stats:Lorg/codehaus/activemq/management/JMSConnectionStatsImpl;
       4: areturn

  public org.codehaus.activemq.management.JMSConnectionStatsImpl getConnectionStats();
    Code:
       0: aload_0
       1: getfield      #65                 // Field stats:Lorg/codehaus/activemq/management/JMSConnectionStatsImpl;
       4: areturn

  public javax.jms.Session createSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #68                 // Method ensureClientIDInitialised:()V
       8: new           #69                 // class org/codehaus/activemq/ActiveMQSession
      11: dup
      12: aload_0
      13: iload_1
      14: ifeq          21
      17: iconst_0
      18: goto          22
      21: iload_2
      22: invokespecial #70                 // Method org/codehaus/activemq/ActiveMQSession."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;I)V
      25: areturn

  public java.lang.String getClientID() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #53                 // Field clientID:Ljava/lang/String;
       8: areturn

  public void setClientID(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field clientIDSet:Z
       4: ifeq          17
       7: new           #72                 // class javax/jms/IllegalStateException
      10: dup
      11: ldc           #73                 // String The clientID has already been set
      13: invokespecial #74                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #75                 // Field isConnectionInfoSentToBroker:Z
      21: ifeq          34
      24: new           #72                 // class javax/jms/IllegalStateException
      27: dup
      28: ldc           #76                 // String Setting clientID on a used Connection is not allowed
      30: invokespecial #74                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: invokevirtual #67                 // Method checkClosed:()V
      38: aload_0
      39: aload_1
      40: putfield      #53                 // Field clientID:Ljava/lang/String;
      43: aload_0
      44: iconst_1
      45: putfield      #77                 // Field userSpecifiedClientID:Z
      48: return

  public javax.jms.ConnectionMetaData getMetaData() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #42                 // Field connectionMetaData:Lorg/codehaus/activemq/ActiveMQConnectionMetaData;
       8: areturn

  public javax.jms.ExceptionListener getExceptionListener() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #78                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       8: areturn

  public void setExceptionListener(javax.jms.ExceptionListener) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: putfield      #78                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       9: aload_0
      10: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      13: aload_1
      14: invokeinterface #15,  2           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.setExceptionListener:(Ljavax/jms/ExceptionListener;)V
      19: return

  public void start() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
       8: iconst_0
       9: iconst_1
      10: invokevirtual #79                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.commit:(ZZ)Z
      13: ifeq          54
      16: aload_0
      17: invokevirtual #80                 // Method sendConnectionInfoToBroker:()V
      20: aload_0
      21: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      24: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      27: astore_1
      28: aload_1
      29: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          54
      37: aload_1
      38: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #69                 // class org/codehaus/activemq/ActiveMQSession
      46: astore_2
      47: aload_2
      48: invokevirtual #84                 // Method org/codehaus/activemq/ActiveMQSession.start:()V
      51: goto          28
      54: return

  protected boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
       4: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
       7: ireturn

  public void stop() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
       8: iconst_1
       9: iconst_0
      10: invokevirtual #79                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.commit:(ZZ)Z
      13: ifeq          73
      16: aload_0
      17: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      20: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      23: astore_1
      24: aload_1
      25: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          50
      33: aload_1
      34: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #69                 // class org/codehaus/activemq/ActiveMQSession
      42: astore_2
      43: aload_2
      44: invokevirtual #86                 // Method org/codehaus/activemq/ActiveMQSession.stop:()V
      47: goto          24
      50: aload_0
      51: sipush        2000
      54: aload_0
      55: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      58: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      61: invokevirtual #87                 // Method sendConnectionInfoToBroker:(IZ)V
      64: aload_0
      65: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      68: invokeinterface #88,  1           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.stop:()V
      73: return

  public synchronized void close() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
       4: iconst_1
       5: invokeinterface #89,  2           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.setPendingStop:(Z)V
      10: aload_0
      11: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      14: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      17: ifne          216
      20: aload_0
      21: getfield      #57                 // Field boundedQueueManager:Lorg/codehaus/activemq/message/util/MemoryBoundedQueueManager;
      24: aload_0
      25: invokevirtual #90                 // Method org/codehaus/activemq/message/util/MemoryBoundedQueueManager.removeCapacityEventListener:(Lorg/codehaus/activemq/capacity/CapacityMonitorEventListener;)V
      28: aload_0
      29: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      32: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      35: astore_1
      36: aload_1
      37: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          62
      45: aload_1
      46: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #69                 // class org/codehaus/activemq/ActiveMQSession
      54: astore_2
      55: aload_2
      56: invokevirtual #91                 // Method org/codehaus/activemq/ActiveMQSession.close:()V
      59: goto          36
      62: aload_0
      63: getfield      #39                 // Field connectionConsumers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      66: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      69: astore_1
      70: aload_1
      71: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          96
      79: aload_1
      80: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #92                 // class org/codehaus/activemq/ActiveMQConnectionConsumer
      88: astore_2
      89: aload_2
      90: invokevirtual #93                 // Method org/codehaus/activemq/ActiveMQConnectionConsumer.close:()V
      93: goto          70
      96: aload_0
      97: aload_0
      98: getfield      #19                 // Field sendCloseTimeout:I
     101: iconst_1
     102: invokevirtual #87                 // Method sendConnectionInfoToBroker:(IZ)V
     105: goto          144
     108: astore_1
     109: getstatic     #95                 // Field log:Lorg/apache/commons/logging/Log;
     112: new           #96                 // class java/lang/StringBuffer
     115: dup
     116: invokespecial #97                 // Method java/lang/StringBuffer."<init>":()V
     119: ldc           #98                 // String Failed to send close to broker, timeout expired of:
     121: invokevirtual #99                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     124: aload_0
     125: getfield      #19                 // Field sendCloseTimeout:I
     128: invokevirtual #100                // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     131: ldc           #101                // String  millis
     133: invokevirtual #99                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     136: invokevirtual #102                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     139: invokeinterface #103,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     144: aload_0
     145: getfield      #39                 // Field connectionConsumers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     148: invokevirtual #104                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.clear:()V
     151: aload_0
     152: getfield      #38                 // Field messageDispatchers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     155: invokevirtual #104                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.clear:()V
     158: aload_0
     159: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
     162: invokeinterface #88,  1           // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.stop:()V
     167: jsr           179
     170: goto          207
     173: astore_3
     174: jsr           179
     177: aload_3
     178: athrow
     179: astore        4
     181: aload_0
     182: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     185: invokevirtual #104                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.clear:()V
     188: aload_0
     189: getfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
     192: iconst_0
     193: invokevirtual #105                // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.set:(Z)Z
     196: pop
     197: aload_0
     198: getfield      #23                 // Field factory:Lorg/codehaus/activemq/ActiveMQConnectionFactory;
     201: aload_0
     202: invokevirtual #106                // Method org/codehaus/activemq/ActiveMQConnectionFactory.onConnectionClose:(Lorg/codehaus/activemq/ActiveMQConnection;)V
     205: ret           4
     207: aload_0
     208: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
     211: iconst_1
     212: invokevirtual #105                // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.set:(Z)Z
     215: pop
     216: return
    Exception table:
       from    to  target type
          96   105   108   Class org/codehaus/activemq/TimeoutExpiredException
          28   170   173   any
         173   177   173   any

  protected synchronized void checkClosed() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #107                // Field startedTransport:Z
       4: ifne          21
       7: aload_0
       8: iconst_1
       9: putfield      #107                // Field startedTransport:Z
      12: aload_0
      13: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      16: invokeinterface #108,  1          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.start:()V
      21: aload_0
      22: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      25: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      28: ifeq          41
      31: new           #72                 // class javax/jms/IllegalStateException
      34: dup
      35: ldc           #109                // String The Connection is closed
      37: invokespecial #74                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  public javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: new           #110                // class org/codehaus/activemq/message/ConsumerInfo
       7: dup
       8: invokespecial #111                // Method org/codehaus/activemq/message/ConsumerInfo."<init>":()V
      11: astore        5
      13: aload         5
      15: aload_0
      16: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      19: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      22: invokevirtual #113                // Method org/codehaus/activemq/message/ConsumerInfo.setId:(Ljava/lang/String;)V
      25: aload         5
      27: aload_0
      28: getfield      #30                 // Field consumerIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      31: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      34: invokevirtual #114                // Method org/codehaus/activemq/message/ConsumerInfo.setConsumerId:(Ljava/lang/String;)V
      37: aload         5
      39: aload_1
      40: invokestatic  #115                // Method org/codehaus/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/codehaus/activemq/message/ActiveMQDestination;
      43: invokevirtual #116                // Method org/codehaus/activemq/message/ConsumerInfo.setDestination:(Lorg/codehaus/activemq/message/ActiveMQDestination;)V
      46: aload         5
      48: aload_2
      49: invokevirtual #117                // Method org/codehaus/activemq/message/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      52: new           #92                 // class org/codehaus/activemq/ActiveMQConnectionConsumer
      55: dup
      56: aload_0
      57: aload_3
      58: aload         5
      60: iload         4
      62: invokespecial #118                // Method org/codehaus/activemq/ActiveMQConnectionConsumer."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;Ljavax/jms/ServerSessionPool;Lorg/codehaus/activemq/message/ConsumerInfo;I)V
      65: areturn

  public javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic, java.lang.String, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: new           #110                // class org/codehaus/activemq/message/ConsumerInfo
       7: dup
       8: invokespecial #111                // Method org/codehaus/activemq/message/ConsumerInfo."<init>":()V
      11: astore        6
      13: aload         6
      15: aload_0
      16: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      19: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      22: invokevirtual #113                // Method org/codehaus/activemq/message/ConsumerInfo.setId:(Ljava/lang/String;)V
      25: aload         6
      27: aload_0
      28: getfield      #30                 // Field consumerIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      31: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      34: invokevirtual #114                // Method org/codehaus/activemq/message/ConsumerInfo.setConsumerId:(Ljava/lang/String;)V
      37: aload         6
      39: aload_1
      40: invokestatic  #115                // Method org/codehaus/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/codehaus/activemq/message/ActiveMQDestination;
      43: invokevirtual #116                // Method org/codehaus/activemq/message/ConsumerInfo.setDestination:(Lorg/codehaus/activemq/message/ActiveMQDestination;)V
      46: aload         6
      48: aload_3
      49: invokevirtual #117                // Method org/codehaus/activemq/message/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      52: aload         6
      54: aload_2
      55: invokevirtual #119                // Method org/codehaus/activemq/message/ConsumerInfo.setConsumerName:(Ljava/lang/String;)V
      58: new           #92                 // class org/codehaus/activemq/ActiveMQConnectionConsumer
      61: dup
      62: aload_0
      63: aload         4
      65: aload         6
      67: iload         5
      69: invokespecial #118                // Method org/codehaus/activemq/ActiveMQConnectionConsumer."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;Ljavax/jms/ServerSessionPool;Lorg/codehaus/activemq/message/ConsumerInfo;I)V
      72: areturn

  public void consume(org.codehaus.activemq.message.Packet);
    Code:
       0: aload_0
       1: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
       4: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
       7: ifne          144
      10: aload_1
      11: ifnull        144
      14: aload_1
      15: invokeinterface #120,  1          // InterfaceMethod org/codehaus/activemq/message/Packet.isJMSMessage:()Z
      20: ifeq          120
      23: aload_1
      24: checkcast     #121                // class org/codehaus/activemq/message/ActiveMQMessage
      27: astore_2
      28: aload_2
      29: iconst_1
      30: invokevirtual #122                // Method org/codehaus/activemq/message/ActiveMQMessage.setReadOnly:(Z)V
      33: aload_2
      34: aload_0
      35: getfield      #53                 // Field clientID:Ljava/lang/String;
      38: invokevirtual #123                // Method org/codehaus/activemq/message/ActiveMQMessage.setProducerID:(Ljava/lang/String;)V
      41: iconst_0
      42: istore_3
      43: aload_0
      44: getfield      #38                 // Field messageDispatchers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      47: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      50: astore        4
      52: aload         4
      54: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          108
      62: aload         4
      64: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #124                // class org/codehaus/activemq/ActiveMQMessageDispatcher
      72: astore        5
      74: aload         5
      76: aload_2
      77: invokeinterface #125,  2          // InterfaceMethod org/codehaus/activemq/ActiveMQMessageDispatcher.isTarget:(Lorg/codehaus/activemq/message/ActiveMQMessage;)Z
      82: ifeq          105
      85: iload_3
      86: ifle          94
      89: aload_2
      90: invokevirtual #126                // Method org/codehaus/activemq/message/ActiveMQMessage.deepCopy:()Lorg/codehaus/activemq/message/ActiveMQMessage;
      93: astore_2
      94: aload         5
      96: aload_2
      97: invokeinterface #127,  2          // InterfaceMethod org/codehaus/activemq/ActiveMQMessageDispatcher.dispatch:(Lorg/codehaus/activemq/message/ActiveMQMessage;)V
     102: iinc          3, 1
     105: goto          52
     108: goto          117
     111: astore_3
     112: aload_0
     113: aload_3
     114: invokevirtual #129                // Method handleAsyncException:(Ljavax/jms/JMSException;)V
     117: goto          144
     120: aload_1
     121: invokeinterface #130,  1          // InterfaceMethod org/codehaus/activemq/message/Packet.getPacketType:()I
     126: bipush        27
     128: if_icmpne     144
     131: aload_1
     132: checkcast     #131                // class org/codehaus/activemq/message/CapacityInfo
     135: astore_2
     136: aload_0
     137: aload_2
     138: invokevirtual #132                // Method org/codehaus/activemq/message/CapacityInfo.getFlowControlTimeout:()J
     141: putfield      #20                 // Field flowControlSleepTime:J
     144: return
    Exception table:
       from    to  target type
          41   108   111   Class javax/jms/JMSException

  public void onException(javax.jms.JMSException);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #129                // Method handleAsyncException:(Ljavax/jms/JMSException;)V
       5: aload_0
       6: iconst_0
       7: putfield      #17                 // Field isTransportOK:Z
      10: aload_0
      11: invokevirtual #133                // Method close:()V
      14: goto          29
      17: astore_2
      18: getstatic     #95                 // Field log:Lorg/apache/commons/logging/Log;
      21: ldc           #134                // String Got an exception closing the connection
      23: aload_2
      24: invokeinterface #135,  3          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      29: return
    Exception table:
       from    to  target type
          10    14    17   Class javax/jms/JMSException

  public javax.jms.TopicSession createTopicSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: new           #69                 // class org/codehaus/activemq/ActiveMQSession
       7: dup
       8: aload_0
       9: iload_1
      10: ifeq          17
      13: iconst_0
      14: goto          18
      17: iload_2
      18: invokespecial #70                 // Method org/codehaus/activemq/ActiveMQSession."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;I)V
      21: areturn

  public javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: new           #110                // class org/codehaus/activemq/message/ConsumerInfo
       7: dup
       8: invokespecial #111                // Method org/codehaus/activemq/message/ConsumerInfo."<init>":()V
      11: astore        5
      13: aload         5
      15: aload_0
      16: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      19: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      22: invokevirtual #113                // Method org/codehaus/activemq/message/ConsumerInfo.setId:(Ljava/lang/String;)V
      25: aload         5
      27: aload_0
      28: getfield      #30                 // Field consumerIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      31: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      34: invokevirtual #114                // Method org/codehaus/activemq/message/ConsumerInfo.setConsumerId:(Ljava/lang/String;)V
      37: aload         5
      39: aload_1
      40: invokestatic  #115                // Method org/codehaus/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/codehaus/activemq/message/ActiveMQDestination;
      43: invokevirtual #116                // Method org/codehaus/activemq/message/ConsumerInfo.setDestination:(Lorg/codehaus/activemq/message/ActiveMQDestination;)V
      46: aload         5
      48: aload_2
      49: invokevirtual #117                // Method org/codehaus/activemq/message/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      52: new           #92                 // class org/codehaus/activemq/ActiveMQConnectionConsumer
      55: dup
      56: aload_0
      57: aload_3
      58: aload         5
      60: iload         4
      62: invokespecial #118                // Method org/codehaus/activemq/ActiveMQConnectionConsumer."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;Ljavax/jms/ServerSessionPool;Lorg/codehaus/activemq/message/ConsumerInfo;I)V
      65: areturn

  public javax.jms.QueueSession createQueueSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: new           #69                 // class org/codehaus/activemq/ActiveMQSession
       7: dup
       8: aload_0
       9: iload_1
      10: ifeq          17
      13: iconst_0
      14: goto          18
      17: iload_2
      18: invokespecial #70                 // Method org/codehaus/activemq/ActiveMQSession."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;I)V
      21: areturn

  public javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: new           #110                // class org/codehaus/activemq/message/ConsumerInfo
       7: dup
       8: invokespecial #111                // Method org/codehaus/activemq/message/ConsumerInfo."<init>":()V
      11: astore        5
      13: aload         5
      15: aload_0
      16: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      19: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      22: invokevirtual #113                // Method org/codehaus/activemq/message/ConsumerInfo.setId:(Ljava/lang/String;)V
      25: aload         5
      27: aload_0
      28: getfield      #30                 // Field consumerIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      31: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      34: invokevirtual #114                // Method org/codehaus/activemq/message/ConsumerInfo.setConsumerId:(Ljava/lang/String;)V
      37: aload         5
      39: aload_1
      40: invokestatic  #115                // Method org/codehaus/activemq/ActiveMQMessageTransformation.transformDestination:(Ljavax/jms/Destination;)Lorg/codehaus/activemq/message/ActiveMQDestination;
      43: invokevirtual #116                // Method org/codehaus/activemq/message/ConsumerInfo.setDestination:(Lorg/codehaus/activemq/message/ActiveMQDestination;)V
      46: aload         5
      48: aload_2
      49: invokevirtual #117                // Method org/codehaus/activemq/message/ConsumerInfo.setSelector:(Ljava/lang/String;)V
      52: new           #92                 // class org/codehaus/activemq/ActiveMQConnectionConsumer
      55: dup
      56: aload_0
      57: aload_3
      58: aload         5
      60: iload         4
      62: invokespecial #118                // Method org/codehaus/activemq/ActiveMQConnectionConsumer."<init>":(Lorg/codehaus/activemq/ActiveMQConnection;Ljavax/jms/ServerSessionPool;Lorg/codehaus/activemq/message/ConsumerInfo;I)V
      65: areturn

  public void checkClientIDWasManuallySpecified() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field userSpecifiedClientID:Z
       4: ifne          17
       7: new           #128                // class javax/jms/JMSException
      10: dup
      11: ldc           #136                // String You cannot create a durable subscriber without specifying a unique clientID on a Connection
      13: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void statusChanged(org.codehaus.activemq.transport.TransportStatusEvent);
    Code:
       0: getstatic     #95                 // Field log:Lorg/apache/commons/logging/Log;
       3: new           #96                 // class java/lang/StringBuffer
       6: dup
       7: invokespecial #97                 // Method java/lang/StringBuffer."<init>":()V
      10: ldc           #138                // String channel status changed:
      12: invokevirtual #99                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      15: aload_1
      16: invokevirtual #139                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      19: invokevirtual #102                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      22: invokeinterface #140,  2          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      27: aload_1
      28: invokevirtual #141                // Method org/codehaus/activemq/transport/TransportStatusEvent.getChannelStatus:()I
      31: iconst_3
      32: if_icmpne     42
      35: aload_0
      36: invokevirtual #142                // Method doReconnect:()V
      39: goto          54
      42: aload_1
      43: invokevirtual #141                // Method org/codehaus/activemq/transport/TransportStatusEvent.getChannelStatus:()I
      46: iconst_2
      47: if_icmpne     54
      50: aload_0
      51: invokevirtual #143                // Method clearMessagesInProgress:()V
      54: return

  public void asyncSendPacket(org.codehaus.activemq.message.Packet) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #144                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;Z)V
       6: return

  public void asyncSendPacket(org.codehaus.activemq.message.Packet, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field isTransportOK:Z
       4: ifeq          79
       7: aload_0
       8: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      11: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      14: ifne          79
      17: iload_2
      18: ifne          33
      21: aload_0
      22: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      25: invokeinterface #145,  1          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.isTransportConnected:()Z
      30: ifeq          79
      33: aload_1
      34: iconst_0
      35: invokeinterface #146,  2          // InterfaceMethod org/codehaus/activemq/message/Packet.setReceiptRequired:(Z)V
      40: aload_1
      41: invokeinterface #120,  1          // InterfaceMethod org/codehaus/activemq/message/Packet.isJMSMessage:()Z
      46: ifeq          69
      49: aload_0
      50: getfield      #20                 // Field flowControlSleepTime:J
      53: lconst_0
      54: lcmp
      55: ifle          69
      58: aload_0
      59: getfield      #20                 // Field flowControlSleepTime:J
      62: invokestatic  #147                // Method java/lang/Thread.sleep:(J)V
      65: goto          69
      68: astore_3
      69: aload_0
      70: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      73: aload_1
      74: invokeinterface #149,  2          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.asyncSend:(Lorg/codehaus/activemq/message/Packet;)V
      79: return
    Exception table:
       from    to  target type
          58    65    68   Class java/lang/InterruptedException

  public void syncSendPacket(org.codehaus.activemq.message.Packet) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #150                // Method syncSendPacket:(Lorg/codehaus/activemq/message/Packet;I)V
       6: return

  public void syncSendPacket(org.codehaus.activemq.message.Packet, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field isTransportOK:Z
       4: ifeq          77
       7: aload_0
       8: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      11: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      14: ifne          77
      17: aload_1
      18: iconst_1
      19: invokeinterface #146,  2          // InterfaceMethod org/codehaus/activemq/message/Packet.setReceiptRequired:(Z)V
      24: aload_0
      25: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      28: aload_1
      29: iload_2
      30: invokeinterface #151,  3          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.send:(Lorg/codehaus/activemq/message/Packet;I)Lorg/codehaus/activemq/message/Receipt;
      35: astore_3
      36: aload_3
      37: ifnull        74
      40: aload_3
      41: invokevirtual #152                // Method org/codehaus/activemq/message/Receipt.isFailed:()Z
      44: ifeq          74
      47: aload_3
      48: invokevirtual #153                // Method org/codehaus/activemq/message/Receipt.getException:()Ljava/lang/Throwable;
      51: astore        4
      53: aload         4
      55: ifnull        64
      58: aload         4
      60: invokestatic  #154                // Method org/codehaus/activemq/util/JMSExceptionHelper.newJMSException:(Ljava/lang/Throwable;)Ljavax/jms/JMSException;
      63: athrow
      64: new           #128                // class javax/jms/JMSException
      67: dup
      68: ldc           #155                // String syncSendPacket failed with unknown exception
      70: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: goto          87
      77: new           #128                // class javax/jms/JMSException
      80: dup
      81: ldc           #156                // String syncSendTimedOut
      83: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: return

  public org.codehaus.activemq.ActiveMQPrefetchPolicy getPrefetchPolicy();
    Code:
       0: aload_0
       1: getfield      #51                 // Field prefetchPolicy:Lorg/codehaus/activemq/ActiveMQPrefetchPolicy;
       4: areturn

  public void setPrefetchPolicy(org.codehaus.activemq.ActiveMQPrefetchPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field prefetchPolicy:Lorg/codehaus/activemq/ActiveMQPrefetchPolicy;
       5: return

  public int getSendCloseTimeout();
    Code:
       0: aload_0
       1: getfield      #19                 // Field sendCloseTimeout:I
       4: ireturn

  public void setSendCloseTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field sendCloseTimeout:I
       5: return

  public int getSendConnectionInfoTimeout();
    Code:
       0: aload_0
       1: getfield      #22                 // Field sendConnectionInfoTimeout:I
       4: ireturn

  public void setSendConnectionInfoTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field sendConnectionInfoTimeout:I
       5: return

  public org.codehaus.activemq.message.Receipt syncSendRequest(org.codehaus.activemq.message.Packet) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #17                 // Field isTransportOK:Z
       8: ifeq          120
      11: aload_0
      12: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      15: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      18: ifne          120
      21: aload_1
      22: iconst_1
      23: invokeinterface #146,  2          // InterfaceMethod org/codehaus/activemq/message/Packet.setReceiptRequired:(Z)V
      28: aload_1
      29: invokeinterface #157,  1          // InterfaceMethod org/codehaus/activemq/message/Packet.getId:()Ljava/lang/String;
      34: ifnull        49
      37: aload_1
      38: invokeinterface #157,  1          // InterfaceMethod org/codehaus/activemq/message/Packet.getId:()Ljava/lang/String;
      43: invokevirtual #158                // Method java/lang/String.length:()I
      46: ifne          62
      49: aload_1
      50: aload_0
      51: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      54: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      57: invokeinterface #159,  2          // InterfaceMethod org/codehaus/activemq/message/Packet.setId:(Ljava/lang/String;)V
      62: aload_0
      63: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      66: aload_1
      67: invokeinterface #160,  2          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.send:(Lorg/codehaus/activemq/message/Packet;)Lorg/codehaus/activemq/message/Receipt;
      72: astore_2
      73: aload_2
      74: invokevirtual #152                // Method org/codehaus/activemq/message/Receipt.isFailed:()Z
      77: ifeq          118
      80: aload_2
      81: invokevirtual #153                // Method org/codehaus/activemq/message/Receipt.getException:()Ljava/lang/Throwable;
      84: astore_3
      85: aload_3
      86: ifnull        108
      89: new           #128                // class javax/jms/JMSException
      92: dup
      93: aload_3
      94: invokevirtual #161                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      97: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     100: aload_3
     101: invokevirtual #162                // Method javax/jms/JMSException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     104: checkcast     #128                // class javax/jms/JMSException
     107: athrow
     108: new           #128                // class javax/jms/JMSException
     111: dup
     112: ldc           #155                // String syncSendPacket failed with unknown exception
     114: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload_2
     119: areturn
     120: new           #128                // class javax/jms/JMSException
     123: dup
     124: ldc           #163                // String Connection closed.
     126: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     129: athrow

  public org.codehaus.activemq.transport.TransportChannel getTransportChannel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
       4: areturn

  public java.lang.String getInitializedClientID() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method ensureClientIDInitialised:()V
       4: aload_0
       5: getfield      #53                 // Field clientID:Ljava/lang/String;
       8: areturn

  protected void addSession(org.codehaus.activemq.ActiveMQSession) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #164                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: aload_1
      11: invokevirtual #165                // Method addMessageDispatcher:(Lorg/codehaus/activemq/ActiveMQMessageDispatcher;)V
      14: aload_0
      15: getfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      18: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      21: ifeq          28
      24: aload_1
      25: invokevirtual #84                 // Method org/codehaus/activemq/ActiveMQSession.start:()V
      28: aload_0
      29: aload_1
      30: invokespecial #166                // Method createSessionInfo:(Lorg/codehaus/activemq/ActiveMQSession;)Lorg/codehaus/activemq/message/SessionInfo;
      33: astore_2
      34: aload_2
      35: iconst_1
      36: invokevirtual #167                // Method org/codehaus/activemq/message/SessionInfo.setStarted:(Z)V
      39: aload_0
      40: aload_2
      41: invokevirtual #168                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;)V
      44: return

  protected void removeSession(org.codehaus.activemq.ActiveMQSession) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #169                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: aload_1
      11: invokevirtual #170                // Method removeMessageDispatcher:(Lorg/codehaus/activemq/ActiveMQMessageDispatcher;)V
      14: aload_0
      15: aload_1
      16: invokespecial #166                // Method createSessionInfo:(Lorg/codehaus/activemq/ActiveMQSession;)Lorg/codehaus/activemq/message/SessionInfo;
      19: astore_2
      20: aload_2
      21: iconst_0
      22: invokevirtual #167                // Method org/codehaus/activemq/message/SessionInfo.setStarted:(Z)V
      25: aload_0
      26: aload_2
      27: iconst_0
      28: invokevirtual #144                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;Z)V
      31: return

  protected void addConnectionConsumer(org.codehaus.activemq.ActiveMQConnectionConsumer) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field connectionConsumers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #164                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: aload_1
      11: invokevirtual #165                // Method addMessageDispatcher:(Lorg/codehaus/activemq/ActiveMQMessageDispatcher;)V
      14: return

  protected void removeConnectionConsumer(org.codehaus.activemq.ActiveMQConnectionConsumer);
    Code:
       0: aload_0
       1: getfield      #39                 // Field connectionConsumers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #164                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: aload_1
      11: invokevirtual #170                // Method removeMessageDispatcher:(Lorg/codehaus/activemq/ActiveMQMessageDispatcher;)V
      14: return

  protected void addMessageDispatcher(org.codehaus.activemq.ActiveMQMessageDispatcher) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field messageDispatchers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #164                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  protected void removeMessageDispatcher(org.codehaus.activemq.ActiveMQMessageDispatcher);
    Code:
       0: aload_0
       1: getfield      #38                 // Field messageDispatchers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #169                // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  protected void handleAsyncException(javax.jms.JMSException);
    Code:
       0: aload_0
       1: getfield      #78                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       4: ifnull        20
       7: aload_0
       8: getfield      #78                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
      11: aload_1
      12: invokeinterface #179,  2          // InterfaceMethod javax/jms/ExceptionListener.onException:(Ljavax/jms/JMSException;)V
      17: goto          31
      20: getstatic     #95                 // Field log:Lorg/apache/commons/logging/Log;
      23: ldc           #180                // String async exception with no exception listener
      25: aload_1
      26: invokeinterface #135,  3          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      31: return

  protected void sendConnectionInfoToBroker() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #22                 // Field sendConnectionInfoTimeout:I
       5: aload_0
       6: getfield      #45                 // Field closed:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
       9: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      12: invokevirtual #87                 // Method sendConnectionInfoToBroker:(IZ)V
      15: return

  protected void sendConnectionInfoToBroker(int, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field isConnectionInfoSentToBroker:Z
       4: ifne          15
       7: aload_0
       8: iconst_1
       9: putfield      #75                 // Field isConnectionInfoSentToBroker:Z
      12: goto          20
      15: iload_2
      16: ifne          20
      19: return
      20: aload_0
      21: invokevirtual #68                 // Method ensureClientIDInitialised:()V
      24: new           #181                // class org/codehaus/activemq/message/ConnectionInfo
      27: dup
      28: invokespecial #182                // Method org/codehaus/activemq/message/ConnectionInfo."<init>":()V
      31: astore_3
      32: aload_3
      33: aload_0
      34: getfield      #53                 // Field clientID:Ljava/lang/String;
      37: invokevirtual #183                // Method org/codehaus/activemq/message/ConnectionInfo.setClientId:(Ljava/lang/String;)V
      40: aload_3
      41: invokestatic  #184                // Method org/codehaus/activemq/util/IdGenerator.getHostName:()Ljava/lang/String;
      44: invokevirtual #185                // Method org/codehaus/activemq/message/ConnectionInfo.setHostName:(Ljava/lang/String;)V
      47: aload_3
      48: aload_0
      49: getfield      #24                 // Field userName:Ljava/lang/String;
      52: invokevirtual #186                // Method org/codehaus/activemq/message/ConnectionInfo.setUserName:(Ljava/lang/String;)V
      55: aload_3
      56: aload_0
      57: getfield      #25                 // Field password:Ljava/lang/String;
      60: invokevirtual #187                // Method org/codehaus/activemq/message/ConnectionInfo.setPassword:(Ljava/lang/String;)V
      63: aload_3
      64: aload_0
      65: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      68: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      71: invokevirtual #188                // Method org/codehaus/activemq/message/ConnectionInfo.setId:(Ljava/lang/String;)V
      74: aload_3
      75: aload_0
      76: getfield      #48                 // Field startTime:J
      79: invokevirtual #189                // Method org/codehaus/activemq/message/ConnectionInfo.setStartTime:(J)V
      82: aload_3
      83: aload_0
      84: getfield      #46                 // Field started:LEDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean;
      87: invokevirtual #85                 // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedBoolean.get:()Z
      90: invokevirtual #190                // Method org/codehaus/activemq/message/ConnectionInfo.setStarted:(Z)V
      93: aload_3
      94: iload_2
      95: invokevirtual #191                // Method org/codehaus/activemq/message/ConnectionInfo.setClosed:(Z)V
      98: aload_3
      99: aload_0
     100: getfield      #42                 // Field connectionMetaData:Lorg/codehaus/activemq/ActiveMQConnectionMetaData;
     103: invokevirtual #192                // Method org/codehaus/activemq/ActiveMQConnectionMetaData.getProviderVersion:()Ljava/lang/String;
     106: invokevirtual #193                // Method org/codehaus/activemq/message/ConnectionInfo.setClientVersion:(Ljava/lang/String;)V
     109: aload_3
     110: aload_0
     111: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
     114: invokeinterface #194,  1          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.getCurrentWireFormatVersion:()I
     119: invokevirtual #195                // Method org/codehaus/activemq/message/ConnectionInfo.setWireFormatVersion:(I)V
     122: aload_0
     123: aload_3
     124: iload_1
     125: invokevirtual #150                // Method syncSendPacket:(Lorg/codehaus/activemq/message/Packet;I)V
     128: return

  public void setConnectionMemoryLimit(int);
    Code:
       0: aload_0
       1: getfield      #57                 // Field boundedQueueManager:Lorg/codehaus/activemq/message/util/MemoryBoundedQueueManager;
       4: iload_1
       5: i2l
       6: invokevirtual #196                // Method org/codehaus/activemq/message/util/MemoryBoundedQueueManager.setValueLimit:(J)V
       9: return

  public int getConnectionMemoryLimit();
    Code:
       0: aload_0
       1: getfield      #57                 // Field boundedQueueManager:Lorg/codehaus/activemq/message/util/MemoryBoundedQueueManager;
       4: invokevirtual #197                // Method org/codehaus/activemq/message/util/MemoryBoundedQueueManager.getValueLimit:()J
       7: l2i
       8: ireturn

  public void capacityChanged(org.codehaus.activemq.capacity.CapacityMonitorEvent);
    Code:
       0: new           #131                // class org/codehaus/activemq/message/CapacityInfo
       3: dup
       4: invokespecial #198                // Method org/codehaus/activemq/message/CapacityInfo."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #29                 // Field packetIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      13: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      16: invokevirtual #199                // Method org/codehaus/activemq/message/CapacityInfo.setId:(Ljava/lang/String;)V
      19: aload_2
      20: aload_1
      21: invokevirtual #200                // Method org/codehaus/activemq/capacity/CapacityMonitorEvent.getMonitorName:()Ljava/lang/String;
      24: invokevirtual #201                // Method org/codehaus/activemq/message/CapacityInfo.setResourceName:(Ljava/lang/String;)V
      27: aload_2
      28: aload_1
      29: invokevirtual #202                // Method org/codehaus/activemq/capacity/CapacityMonitorEvent.getCapacity:()I
      32: invokevirtual #203                // Method org/codehaus/activemq/message/CapacityInfo.setCapacity:(I)V
      35: aload_0
      36: aload_2
      37: iconst_0
      38: invokevirtual #144                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;Z)V
      41: goto          68
      44: astore_3
      45: new           #128                // class javax/jms/JMSException
      48: dup
      49: ldc           #204                // String failed to send change in capacity
      51: invokespecial #137                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      54: astore        4
      56: aload         4
      58: aload_3
      59: invokevirtual #205                // Method javax/jms/JMSException.setLinkedException:(Ljava/lang/Exception;)V
      62: aload_0
      63: aload         4
      65: invokevirtual #129                // Method handleAsyncException:(Ljavax/jms/JMSException;)V
      68: return
    Exception table:
       from    to  target type
          35    41    44   Class javax/jms/JMSException

  protected int getNextConsumerNumber();
    Code:
       0: aload_0
       1: getfield      #34                 // Field consumerNumberGenerator:LEDU/oswego/cs/dl/util/concurrent/SynchronizedInt;
       4: invokevirtual #206                // Method EDU/oswego/cs/dl/util/concurrent/SynchronizedInt.increment:()I
       7: ireturn

  protected java.lang.String generateSessionId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field sessionIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
       4: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
       7: areturn

  protected void ensureClientIDInitialised();
    Code:
       0: aload_0
       1: getfield      #53                 // Field clientID:Ljava/lang/String;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: getfield      #28                 // Field clientIdGenerator:Lorg/codehaus/activemq/util/IdGenerator;
      12: invokevirtual #112                // Method org/codehaus/activemq/util/IdGenerator.generateId:()Ljava/lang/String;
      15: putfield      #53                 // Field clientID:Ljava/lang/String;
      18: aload_0
      19: getfield      #13                 // Field transportChannel:Lorg/codehaus/activemq/transport/TransportChannel;
      22: aload_0
      23: getfield      #53                 // Field clientID:Ljava/lang/String;
      26: invokeinterface #207,  2          // InterfaceMethod org/codehaus/activemq/transport/TransportChannel.setClientID:(Ljava/lang/String;)V
      31: aload_0
      32: iconst_1
      33: putfield      #71                 // Field clientIDSet:Z
      36: return

  protected org.codehaus.activemq.message.util.MemoryBoundedQueue getMemoryBoundedQueue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #57                 // Field boundedQueueManager:Lorg/codehaus/activemq/message/util/MemoryBoundedQueueManager;
       4: aload_1
       5: invokevirtual #208                // Method org/codehaus/activemq/message/util/MemoryBoundedQueueManager.getMemoryBoundedQueue:(Ljava/lang/String;)Lorg/codehaus/activemq/message/util/MemoryBoundedQueue;
       8: areturn

  protected void doReconnect();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #75                 // Field isConnectionInfoSentToBroker:Z
       5: aload_0
       6: invokevirtual #80                 // Method sendConnectionInfoToBroker:()V
       9: aload_0
      10: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      13: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          166
      26: aload_1
      27: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #69                 // class org/codehaus/activemq/ActiveMQSession
      35: astore_2
      36: aload_0
      37: aload_2
      38: invokespecial #166                // Method createSessionInfo:(Lorg/codehaus/activemq/ActiveMQSession;)Lorg/codehaus/activemq/message/SessionInfo;
      41: astore_3
      42: aload_3
      43: iconst_1
      44: invokevirtual #167                // Method org/codehaus/activemq/message/SessionInfo.setStarted:(Z)V
      47: aload_0
      48: aload_3
      49: iconst_0
      50: invokevirtual #144                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;Z)V
      53: aload_2
      54: getfield      #209                // Field org/codehaus/activemq/ActiveMQSession.consumers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
      57: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      60: astore        4
      62: aload         4
      64: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          108
      72: aload         4
      74: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #210                // class org/codehaus/activemq/ActiveMQMessageConsumer
      82: astore        5
      84: aload_2
      85: aload         5
      87: invokevirtual #211                // Method org/codehaus/activemq/ActiveMQSession.createConsumerInfo:(Lorg/codehaus/activemq/ActiveMQMessageConsumer;)Lorg/codehaus/activemq/message/ConsumerInfo;
      90: astore        6
      92: aload         6
      94: iconst_1
      95: invokevirtual #212                // Method org/codehaus/activemq/message/ConsumerInfo.setStarted:(Z)V
      98: aload_0
      99: aload         6
     101: iconst_0
     102: invokevirtual #144                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;Z)V
     105: goto          62
     108: aload_2
     109: getfield      #213                // Field org/codehaus/activemq/ActiveMQSession.producers:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
     112: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
     115: astore        4
     117: aload         4
     119: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          163
     127: aload         4
     129: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #214                // class org/codehaus/activemq/ActiveMQMessageProducer
     137: astore        5
     139: aload_2
     140: aload         5
     142: invokevirtual #215                // Method org/codehaus/activemq/ActiveMQSession.createProducerInfo:(Lorg/codehaus/activemq/ActiveMQMessageProducer;)Lorg/codehaus/activemq/message/ProducerInfo;
     145: astore        6
     147: aload         6
     149: iconst_1
     150: invokevirtual #216                // Method org/codehaus/activemq/message/ProducerInfo.setStarted:(Z)V
     153: aload_0
     154: aload         6
     156: iconst_0
     157: invokevirtual #144                // Method asyncSendPacket:(Lorg/codehaus/activemq/message/Packet;Z)V
     160: goto          117
     163: goto          17
     166: goto          190
     169: astore_1
     170: getstatic     #95                 // Field log:Lorg/apache/commons/logging/Log;
     173: ldc           #217                // String Failed to do reconnection
     175: invokeinterface #218,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     180: aload_0
     181: aload_1
     182: invokevirtual #129                // Method handleAsyncException:(Ljavax/jms/JMSException;)V
     185: aload_0
     186: iconst_0
     187: putfield      #17                 // Field isTransportOK:Z
     190: return
    Exception table:
       from    to  target type
           0   166   169   Class javax/jms/JMSException

  public boolean isUseAsyncSend();
    Code:
       0: aload_0
       1: getfield      #21                 // Field useAsyncSend:Z
       4: ireturn

  public void setUseAsyncSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field useAsyncSend:Z
       5: return

  protected void clearMessagesInProgress();
    Code:
       0: aload_0
       1: getfield      #37                 // Field sessions:LEDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #81                 // Method EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          34
      17: aload_1
      18: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #69                 // class org/codehaus/activemq/ActiveMQSession
      26: astore_2
      27: aload_2
      28: invokevirtual #219                // Method org/codehaus/activemq/ActiveMQSession.clearMessagesInProgress:()V
      31: goto          8
      34: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: getstatic     #220                // Field class$org$codehaus$activemq$ActiveMQConnection:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #221                // String org.codehaus.activemq.ActiveMQConnection
       8: invokestatic  #222                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #220                // Field class$org$codehaus$activemq$ActiveMQConnection:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #220                // Field class$org$codehaus$activemq$ActiveMQConnection:Ljava/lang/Class;
      21: invokestatic  #223                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      24: putstatic     #95                 // Field log:Lorg/apache/commons/logging/Log;
      27: return
}
